#!/bin/sh -e

# Install these packages: libgmp3-dev libmpfr-dev libmpc-dev texinfo

GNU_SOURCE=http://www.gtlib.gatech.edu/pub/gnu/gnu
NEWLIB_SOURCE=ftp://sources.redhat.com/pub/newlib

BINUTILS_PACKAGE=binutils-2.20.1
GCC_PACKAGE=gcc-4.5.0
NEWLIB_PACKAGE=newlib-1.18.0

PACKAGES="libgmp3-dev libmpfr-dev libmpc-dev texinfo curl"

BASE_DIR=$(dirname $(readlink -f $0))
DOWNLOAD_DIR=$BASE_DIR/downloads
SOURCE_DIR=$BASE_DIR/src
BUILD_DIR=$BASE_DIR/build
INSTALL_DIR=$BASE_DIR/install

if [ "$1" = "clean" ]; then
    echo "*** Removing source trees"
    rm -rf src/*
    echo "*** Removing build trees"
    rm -rf build/*
    echo "*** Removing installed files"
    rm -rf install/*
elif [ "$1" != "" ]; then
    echo "Usage: $0 [clean]"
    exit 1
fi

# Install packages
unset NEED_PACKAGES
for i in $PACKAGES; do
	if [ ! -e /var/lib/dpkg/info/$i.list ]; then
		NEED_PACKAGES="$NEED_PACKAGES $i"
	fi
done

if [ "$NEED_PACKAGES" != "" ]; then
	echo "Need to install: $NEED_PACKAGES"
	echo ""
	sudo apt-get install $NEED_PACKAGES
	echo ""
fi

# Download files
download()
{
	BASE=$(basename $1)
	FILE=$DOWNLOAD_DIR/$BASE
	FINISHED=$DOWNLOAD_DIR/.finished_$BASE
	if [ ! -e $FINISHED ]; then
		echo "*** Downloading $BASE"
		if ! curl $1 -o $FILE; then
			rm -f $FILE
			echo "Failed to download $1"
			exit 1
		fi
		
		touch $FINISHED
	fi
}

download $GNU_SOURCE/binutils/$BINUTILS_PACKAGE.tar.bz2
download $GNU_SOURCE/gcc/$GCC_PACKAGE/$GCC_PACKAGE.tar.bz2
download $NEWLIB_SOURCE/$NEWLIB_PACKAGE.tar.gz

# Extract source
cd $SOURCE_DIR
if [ ! -e $SOURCE_DIR/$BINUTILS_PACKAGE/.unpack_done ]; then
    echo "*** Unpacking binutils"
    tar xfj $DOWNLOAD_DIR/$BINUTILS_PACKAGE.tar.bz2
    touch $SOURCE_DIR/$BINUTILS_PACKAGE/.unpack_done
fi
if [ ! -e $SOURCE_DIR/$GCC_PACKAGE/.unpack_done ]; then
    echo "*** Unpacking gcc"
    tar xfj $DOWNLOAD_DIR/$GCC_PACKAGE.tar.bz2
    touch $SOURCE_DIR/$GCC_PACKAGE/.unpack_done
fi
if [ ! -e $SOURCE_DIR/$NEWLIB_PACKAGE/.unpack_done ]; then
    echo "*** Unpacking newlib"
    tar xfz $DOWNLOAD_DIR/$NEWLIB_PACKAGE.tar.gz
    touch $SOURCE_DIR/$NEWLIB_PACKAGE/.unpack_done
fi

export PATH=$PATH:$INSTALL_DIR/bin

# Build binutils
mkdir -p $BUILD_DIR/$BINUTILS_PACKAGE
cd $BUILD_DIR/$BINUTILS_PACKAGE
if [ ! -e Makefile ]; then
    echo "*** Configuring binutils"
    $SOURCE_DIR/$BINUTILS_PACKAGE/configure --target=arm-elf --enable-interwork --enable-multilib --prefix=$INSTALL_DIR
fi
echo "*** Building binutils"
make
make install

# Build gcc
mkdir -p $BUILD_DIR/$GCC_PACKAGE
cd $BUILD_DIR/$GCC_PACKAGE
if [ ! -e Makefile ]; then
    echo "*** Configuring gcc"
    $SOURCE_DIR/$GCC_PACKAGE/configure --target=arm-elf --with-newlib --enable-languages="c,c++" --disable-threads \
        --disable-shared --with-headers=$BASE_DIR/src/$NEWLIB_PACKAGE/newlib/libc/include \
        --enable-interwork --enable-multilib --prefix=$INSTALL_DIR
fi
echo "*** Building gcc"
make
make install

# Build newlib
mkdir -p $BUILD_DIR/$NEWLIB_PACKAGE
cd $BUILD_DIR/$NEWLIB_PACKAGE
if [ ! -e Makefile ]; then
    echo "*** Configuring newlib"
    $SOURCE_DIR/$NEWLIB_PACKAGE/configure --target=arm-elf --enable-interwork --enable-multilib --prefix=$INSTALL_DIR
fi
echo "*** Building newlib"
make
make install
